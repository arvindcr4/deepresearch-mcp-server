version: '3.8'

services:
  # Neo4j Database
  neo4j:
    image: neo4j:5-community
    container_name: neo4j-atlas-mcp-server
    ports:
      - "7474:7474"   # HTTP Browser
      - "7687:7687"   # Bolt protocol
    environment:
      NEO4J_PLUGINS: '["apoc"]'  # Install APOC plugin
      NEO4J_AUTH: neo4j/password2  # Change password for production use
      NEO4J_dbms_usage__report_enabled: "false"
      NEO4J_server_bolt_listen__address: ":7687"
      NEO4J_server_bolt_advertised__address: ":7687"
      NEO4J_server_memory_heap_initial__size: "512m"
      NEO4J_server_memory_heap_max__size: "1G"
      NEO4J_server_jvm_additional: "-XX:+HeapDumpOnOutOfMemoryError"
      NEO4J_db_logs_query_enabled: "INFO"
      NEO4J_db_logs_query_threshold: "0"
      NEO4J_db_transaction_timeout: "5s"
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"  # Allow APOC procedures
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - deepresearch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # MCP Server Application
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: deepresearch-mcp-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password2
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - deepresearch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Development version (optional)
  mcp-server-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: deepresearch-mcp-server-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password2
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - deepresearch-network
    profiles:
      - dev
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: deepresearch-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - deepresearch-network
    restart: unless-stopped
    profiles:
      - cache
    command: redis-server --appendonly yes

networks:
  deepresearch-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  redis_data: