name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    services:
      neo4j:
        image: neo4j:5-community
        env:
          NEO4J_AUTH: neo4j/test1234
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "cypher-shell -u neo4j -p test1234 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create .env file
      run: |
        cat > .env << EOF
        NEO4J_URI=bolt://localhost:7687
        NEO4J_USER=neo4j
        NEO4J_PASSWORD=test1234
        PERPLEXITY_API_KEY=test-key
        OPENAI_API_KEY=test-key
        XAI_API_KEY=test-key
        MCP_SERVER_NAME=deepresearch-mcp-server
        MCP_SERVER_VERSION=1.0.0
        NODE_ENV=test
        EOF
    
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: test1234
        NODE_ENV: test
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.4.0
      with:
        lcov-file: ./coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}

  memory-profile:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    services:
      neo4j:
        image: neo4j:5-community
        env:
          NEO4J_AUTH: neo4j/test1234
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "cypher-shell -u neo4j -p test1234 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Create .env file
      run: |
        cat > .env << EOF
        NEO4J_URI=bolt://localhost:7687
        NEO4J_USER=neo4j
        NEO4J_PASSWORD=test1234
        PERPLEXITY_API_KEY=test-key
        OPENAI_API_KEY=test-key
        XAI_API_KEY=test-key
        MCP_SERVER_NAME=deepresearch-mcp-server
        MCP_SERVER_VERSION=1.0.0
        NODE_ENV=production
        EOF
    
    - name: Run memory profile
      run: npm run memory:profile -- --duration 120000 --take-snapshots
      continue-on-error: true
    
    - name: Upload memory profiles
      uses: actions/upload-artifact@v4
      with:
        name: memory-profiles
        path: memory-profiles/
        retention-days: 7
    
    - name: Check for memory leaks
      run: |
        if [ -f "memory-profiles/leak-*.json" ]; then
          echo "⚠️ Potential memory leaks detected!"
          echo "Please review the memory profile artifacts."
          exit 1
        fi